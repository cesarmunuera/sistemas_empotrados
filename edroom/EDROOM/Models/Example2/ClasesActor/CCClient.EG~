[Version Actor SW]
5
0
0
0
0
[Modificado]
1
1
0
[Estructura]
[Version Estructura]
3
[Parametro]
NULL
 
 
[FinParametro]
[Stack]
1
[FinStack]
[Puertos]
2
[Version Puerto]
0
pSerReq
1
1
0
[Version Grafico Puerto]
0
4
40
CPService
[Version Puerto]
0
Timer
0
1
1
[Version Grafico Puerto]
0
30
44
EDROOMTimingSAP
[FinPuertos]
[ActoresComponente]
0
[FinActoresComponente]
[Uniones]
0
[FinUniones]
[NumTimers]
2
[FinNumTimers]
[NumMsgDef]
10
[FinNumMsgDef]
[FinEstructura]
[Comportamiento]
[Version Comportamiento]
3
0
[Pools]
0
[Modulos]
0
[Eventos]
1
[Event]
[Version]
1
EvTimerTimer
Timer
[Maquina de Estados]
[Version Maquina de Estados]
1
Top
NULL
[Subestados]
4
[Version SubEstados]
3
I
;
;
;
;
;
0
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
73 73 55 55
[FinObjetoGrafico]
Idle
FProgRequest();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
190 341 151 60
[FinObjetoGrafico]
Wait
FProgWait();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
211 141 90 60
[FinObjetoGrafico]
Working
FProgWorking();
;
;
;
;
1
0
[ObjetoGrafico]
[Version Objeto Grafico]
0
367 227 90 60
[FinObjetoGrafico]
[PuntosEleccion]
2
[Version PuntosEleccion]
2
ResRequest
1
[ObjetoGrafico]
[Version Objeto Grafico]
0
244 245 35 35
[FinObjetoGrafico]
TryAgain
1
[ObjetoGrafico]
[Version Objeto Grafico]
0
314 79 35 35
[FinObjetoGrafico]
ResRequest
1
[Ramas]
2
[Version Ramas]
5
Nack
true
Wait
DSubEst
;

 

;
;
;
;
[GraficoRama]
[Version GraficoRama]
0
261 245 258 201 3
[FinGraficoRama]
Ack
GIsAck()
Working
DSubEst
;

 

;
;
;
;
[GraficoRama]
[Version GraficoRama]
0
276 254 367 254 1
[FinGraficoRama]
TryAgain
1
[Ramas]
2
[Version Ramas]
5
Nack
true
Wait
DSubEst
;

 

;
;
;
;
[GraficoRama]
[Version GraficoRama]
0
319 82 223 141 2
[FinGraficoRama]
Ack
GIsAck()
Working
DSubEst
;

 

;
;
;
;
[GraficoRama]
[Version GraficoRama]
0
348 96 440 227 0
[FinGraficoRama]
[Transiciones]
4
[Version Transicion]
5
Transicion0
I
OSubEstI
Idle
DSubEst
;
[Trigger]
 
 
true
 
 
 
;
;
;
0
;
[GraficoTransicion]
[Version GraficoTransicion]
0
109 124 190 351 0
[FinGraficoTransicion]
ResRequest
Idle
OSubEst
ResRequest
DPEleccion
;
[Trigger]
Timer
EDROOMSignalTimeout
true
 
 
 
;
;
FResRequest();
0
;
[GraficoTransicion]
[Version GraficoTransicion]
0
256 341 261 279 1
[FinGraficoTransicion]
TryAgain
Wait
OSubEst
TryAgain
DPEleccion
;
[Trigger]
Timer
EDROOMSignalTimeout
true
 
 
 
;
;
FResRequest();
0
;
[GraficoTransicion]
[Version GraficoTransicion]
0
291 141 321 109 1
[FinGraficoTransicion]
FreeRe
Working
OSubEst
Idle
DSubEst
;
[Trigger]
Timer
EDROOMSignalTimeout
true
 
 
 
;
FFreeRes();
;
0
;
[GraficoTransicion]
[Version GraficoTransicion]
0
367 273 319 341 2
[FinGraficoTransicion]
[VariablesConstantes]
0
[Metodos]
6
[Version Metodos]
21
Inform
FProgRequest()
0
0
0
0
1
 
5
	 
	//Timing Service useful methods
	 
interval = Pr_Time(3, 0); // interval of X sec + Y microsec
printf("%s is sleeping\n", EDROOMcomponent.EDROOMName);
[ServiceRequest]
InformIn
Timer
EDROOMSignalTimeout
 
 
Inform
FProgWait()
0
0
0
0
1
 
6
	 
	//Timing Service useful methods
	 
interval = Pr_Time(1,0); // interval of X sec + Y microsec
 
printf("%s is waiting\n", EDROOMcomponent.EDROOMName);
[ServiceRequest]
InformIn
Timer
EDROOMSignalTimeout
 
 
Inform
FProgWorking()
0
0
0
0
1
 
6
	 
	//Timing Service useful methods
	 
	//time.GetTime(); // Get current monotonic time
time.Add(2,0); // Add X sec + Y microsec
printf("%s is working\n", EDROOMcomponent.EDROOMName);
[ServiceRequest]
InformAt
Timer
EDROOMSignalTimeout
 
 
InvokeMsg
FResRequest()
0
0
0
0
1

0
[ServiceRequest]
invoke
pSerReq
SResReq
NULL
EDROOMprioVeryHigh
SendMsg
FFreeRes()
0
0
0
0
1

0
[ServiceRequest]
send
pSerReq
SFreeRes
NULL
EDROOMprioNormal
Guard
GIsAck()
0
0
0
0
1

1
return(MsgBack -> signal == SResAck);
[MaquinasSubEstados]
0
[FinMaquinasSubEstados]
[Fin Maquina de Estados]
[FinComportamiento]
